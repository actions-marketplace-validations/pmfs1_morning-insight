const { getInput, setOutput } = require('@actions/core'); // IMPORTS THE REQUIRED MODULES.
// TYPE: ENUM THAT DEFINES THE TYPES OF OBJECTS THAT CAN BE RETURNED.
const TYPE = {
    QUOTE: 'QUOTE',
    JOKE: 'JOKE'
};
// GET_OBJECT(): SELECTS A OBJECT FROM THE DATABASE COMMITTED WITH THE ACTION (PATH: ./DATABASE.JSON) (WITH A GIVEN TYPE), PARSES IT, IF IT'S A QUOTE FORMATS IT IN A 'QUOTE (AUTHOR)' STYLE (IF THE AUTHOR IS NULL IT DOESN'T GET PRINTED.); IF IT'S A JOKE, FORMATS IT IN A 'SETUP PUNCHLINE' STYLE. THEN SETS IT RETURNS IT.
const GET_OBJECT = TYPE_TO_SELECT => {
    const DATABASE = require('./DATABASE.json');
    const OBJECT = DATABASE[TYPE_TO_SELECT][Math.floor(Math.random() * DATABASE[TYPE_TO_SELECT].length)];
    return TYPE_TO_SELECT === TYPE.QUOTE ? OBJECT.QUOTE + (OBJECT.AUTHOR ? ` (${OBJECT.AUTHOR})` : '') : TYPE_TO_SELECT === TYPE.JOKE ? `${OBJECT.SETUP} ${OBJECT.PUNCHLINE}` : null;
};
// RANDOM_TYPE(): RETURNS A RANDOM TYPE FROM THE VALID ONES IN THE TYPE ENUM, HAVING A 5% CHANCE OF GETTING A JOKE, 95% CHANCE OF GETTING A QUOTE.
const RANDOM_TYPE = () => Math.random() < 0.05 ? TYPE.JOKE : Math.random() < 0.95 ? TYPE.QUOTE : null;
// MAIN(): USES THE GET_OBJECT(RANDOM_TYPE()) FUNCTION AND THEN SETS IT AS THE OUTPUT FOR THE GITHUB ACTION'S OUTPUT. IF THE INPUT 'GSM-7_COMPATIBLE' IS TRUE, THEN IT CONVERTS THE OUTPUT TO A GSM7 COMPATIBLE STRING (BY REPLACING ALL THE '’', '“' AND '”' WITH '''; AND MAKING SURE THE CHOSEN OBJECT IS SMALLER THAN 160 CHARACTERS). IF THE INPUT 'GSM-7_COMPATIBLE' IS FALSE, THEN IT JUST SETS THE OBJECT ITSELF.
function MAIN() {
    const OBJECT = GET_OBJECT(RANDOM_TYPE());
    const GSM_7_COMPATIBLE_OBJECT = OBJECT.replace(/’/g, "'").replace(/“/g, '"').replace(/”/g, '"');
    return getInput('GSM-7_COMPATIBLE') === 'true' ? GSM_7_COMPATIBLE_OBJECT.length > 160 ? MAIN() : setOutput('OUTPUT', GSM_7_COMPATIBLE_OBJECT) : setOutput('OUTPUT', OBJECT);
}
// CALL TO THE MAIN FUNCTION.
MAIN();